import telebot
from telebot import types
import config
import db
import defs
import time
import buttons

bot = telebot.TeleBot(config.TOKEN_BOT)

rasp_week = types.KeyboardButton("–†–∞—Å–ø. –Ω–µ–¥–µ–ª—è")
rasp_tomorrow = types.KeyboardButton("üóì–ó–∞–≤—Ç—Ä–∞")
rasp_today = types.KeyboardButton("üóì–°–µ–≥–æ–¥–Ω—è")
profil = types.KeyboardButton("üë§–ü—Ä–æ—Ñ–∏–ª—å")
settings = types.KeyboardButton("‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏")


@bot.message_handler(commands=['veronika'])
def start(message):
    msg = '–Ø —Ç–µ–±—è –ª—é–±–ª—é , –º–æ—è –∑–∞–π–∫–∞‚ù§Ô∏è'
    bot.send_message(message.chat.id, msg)


@bot.message_handler(commands=['admin'])
def start(message):
    tg_id = message.from_user.id
    if tg_id in config.admins:
        msg = '–î–æ–±–∞–≤–ª–µ–Ω–∞ –∞–¥–º–∏–Ω –ø–∞–Ω–µ–ª—å'
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        admin = types.KeyboardButton("‚õîÔ∏è–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å")
        markup.add(rasp_week, rasp_tomorrow, rasp_today)
        markup.add(profil, settings, admin)
        bot.send_message(message.chat.id, msg, reply_markup=markup)
    if tg_id not in config.admins:
        msg = '–¢—ã –Ω–µ –æ–¥–º–µ–Ω ('
        bot.send_message(message.chat.id, msg)


@bot.message_handler(commands=['start'])
def start(message):
    try:
        tg_id = message.from_user.id
        username = message.from_user.username
        first_name = message.from_user.first_name
        last_name = message.from_user.last_name
        if db.check_user(tg_id) == 'No':
            db.create_user(username, tg_id, first_name, last_name)
            msg = f'–ù–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å:\n–ò–º—è: {first_name}\nID: {tg_id}\n–°—Å—ã–ª–∫–∞: https://t.me/{username}'
            rif = 1212477490
            valek = 854686840
            bot.send_message(int(rif), msg)
            bot.send_message(int(valek), msg)
        mesg = bot.send_message(message.chat.id,
                                'üëã–ü—Ä–∏–≤–µ—Ç, —è –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –ø–æ –ø–æ–∏—Å–∫—É —Ä–∞—Å–ø–ø–∏—Å–∞–Ω–∏–µüëã \nüîç–î–∞–≤–∞–π –Ω–∞–π–¥—ë–º —Ç—Ä–æ—é –≥—Ä—É–ø–ø—Éüîé\n‚ùï(–ü—Ä–∏–º–µ—Ä : –ò–ë-321)‚ùï\nP.S. –ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ\n–ë—É–¥–µ–º –±–ª–∞–≥–æ–¥–∞—Ä–Ω—ã –ø–æ–º–æ—â–∏‚ù§Ô∏è')
        bot.register_next_step_handler(mesg, find_group)
    except Exception as ex:
        print(f'–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ start: {ex}')


def new_offer(message):
    try:
        msg = f"–°–ø–∞—Å–∏–±–æ –∑–∞ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ‚ù§Ô∏è"
        db.new_offer(message.from_user.id, message.from_user.username, message.text)
        markup = buttons.markup_menu(message.from_user.id)
        bot.send_message(message.chat.id, msg, reply_markup=markup)
    except Exception as ex:
        print(f'–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ new_offer: {ex}')


def new_mistake(message):
    try:
        msg = f"–°–ø–∞—Å–∏–±–æ –∑–∞ –æ–±—Ä–∞—Ç–Ω—É—é —Å–≤—è–∑—å‚ù§Ô∏è"
        db.new_mistake(message.from_user.id, message.from_user.username, message.text)
        markup = buttons.markup_menu(message.from_user.id)
        bot.send_message(message.chat.id, msg, reply_markup=markup)
    except Exception as ex:
        print(f'–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ start: {ex}')


def find_group(message):
    try:
        list_f_k_g = defs.find_info_for_group(message.text)
        faculty = list_f_k_g[0]
        kind = list_f_k_g[1]
        group = list_f_k_g[2]
        markup = types.InlineKeyboardMarkup()
        yes = types.InlineKeyboardButton(text='–î–∞, –≤—Å—ë –≤–µ—Ä–Ω–æ!', callback_data=f"{'menu'}")
        no = types.InlineKeyboardButton(text='–ù–µ—Ç, —Ç—ã –æ—à–∏–±—Å—è', callback_data=f"{'wrong_choicec'}")
        markup.add(yes, no)
        db.update_user_info_group(message.from_user.id, message.text)
        msg = f"–ö–∞–∂–µ—Ç—Å—è —è —á—Ç–æ-—Ç–æ –Ω–∞—à—ë–ª\n–§–∞–∫—É–ª—å—Ç–µ—Ç {faculty} \n–ö—É—Ä—Å {kind}\n–ì—Ä—É–ø–ø–∞ {group}\n–Ø –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—à—ë–ª?"
        bot.send_message(message.chat.id, msg, reply_markup=markup)
    except Exception as ex:
        mesg = bot.send_message(message.chat.id, '–¢—ã –≤–≤–µ–ª —á—Ç–æ-—Ç–æ –Ω–µ–≤–µ—Ä–Ω–æ–µ , –≤–≤–µ–¥–∏ –µ—â–µ —Ä–∞–∑.\n(–ü—Ä–∏–º–µ—Ä : –ò–ë-321)')
        bot.register_next_step_handler(mesg, find_group)


@bot.callback_query_handler(func=lambda callback: callback.data)
def check_callback(callback):
    try:
        if callback.data == "menu":
            markup = buttons.markup_menu(callback.from_user.id)
            bot.send_message(callback.message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=markup)
        if callback.data == "wrong_choicec":
            mesg = bot.send_message(callback.message.chat.id, '–ü–æ—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ –µ—â–µ —Ä–∞–∑.\n(–ü—Ä–∏–º–µ—Ä –ò–ë-331)')
            bot.register_next_step_handler(mesg, find_group)
    except Exception as ex:
        print(f'–û—à–∏–±–∫–∞ –≤ —Ñ—É–Ω–∫—Ü–∏–∏ check_callback: {ex}')


@bot.message_handler(content_types=['text'])
def func(message):
    if (message.text == "–ù–µ—á—ë—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è"):
        markup = buttons.markup_week('not_even')
        bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å", reply_markup=markup)

    if (message.text == "–ß—ë—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è"):
        markup = buttons.markup_week('even')
        bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–Ω—å",
                         reply_markup=markup)

    ################### –ù–µ—á—ë—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è ###################
    if (message.text == "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫‚≠êÔ∏è"):
        msg = defs.rasp_day(db.get_group_for_tg_id(message.from_user.id), 0, 'not_even')
        bot.send_message(message.chat.id, msg)
    if (message.text == "–í—Ç–æ—Ä–Ω–∏–∫‚≠êÔ∏è"):
        msg = defs.rasp_day(db.get_group_for_tg_id(message.from_user.id), 1, 'not_even')
        bot.send_message(message.chat.id, msg)
    if (message.text == "–°—Ä–µ–¥–∞‚≠êÔ∏è"):
        msg = defs.rasp_day(db.get_group_for_tg_id(message.from_user.id), 2, 'not_even')
        bot.send_message(message.chat.id, msg)
    if (message.text == "–ß–µ—Ç–≤–µ—Ä–≥‚≠êÔ∏è"):
        msg = defs.rasp_day(db.get_group_for_tg_id(message.from_user.id), 3, 'not_even')
        bot.send_message(message.chat.id, msg)
    if (message.text == "–ü—è—Ç–Ω–∏—Ü–∞‚≠êÔ∏è"):
        msg = defs.rasp_day(db.get_group_for_tg_id(message.from_user.id), 4, 'not_even')
        bot.send_message(message.chat.id, msg)
    if (message.text == "–°—É–±–±–æ—Ç–∞‚≠êÔ∏è"):
        msg = defs.rasp_day(db.get_group_for_tg_id(message.from_user.id), 5, 'not_even')
        bot.send_message(message.chat.id, msg)
    ################### –ù–µ—á—ë—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è ###################

    ################### –ß—ë—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è ###################
    if (message.text == "–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫üåü"):
        msg = defs.rasp_day(db.get_group_for_tg_id(message.from_user.id), 0, 'even')
        bot.send_message(message.chat.id, msg)
    if (message.text == "–í—Ç–æ—Ä–Ω–∏–∫üåü"):
        msg = defs.rasp_day(db.get_group_for_tg_id(message.from_user.id), 1, 'even')
        bot.send_message(message.chat.id, msg)
    if (message.text == "–°—Ä–µ–¥–∞üåü"):
        msg = defs.rasp_day(db.get_group_for_tg_id(message.from_user.id), 2, 'even')
        bot.send_message(message.chat.id, msg)
    if (message.text == "–ß–µ—Ç–≤–µ—Ä–≥üåü"):
        msg = defs.rasp_day(db.get_group_for_tg_id(message.from_user.id), 3, 'even')
        bot.send_message(message.chat.id, msg)
    if (message.text == "–ü—è—Ç–Ω–∏—Ü–∞üåü"):
        msg = defs.rasp_day(db.get_group_for_tg_id(message.from_user.id), 4, 'even')
        bot.send_message(message.chat.id, msg)
    if (message.text == "–°—É–±–±–æ—Ç–∞üåü"):
        msg = defs.rasp_day(db.get_group_for_tg_id(message.from_user.id), 5, 'even')
        bot.send_message(message.chat.id, msg)
    ################### –ù–µ—á—ë—Ç–Ω–∞—è –Ω–µ–¥–µ–ª—è ###################

    if (message.text == "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ"):
        bot.send_message(message.chat.id,
                         f"""–ë–æ—Ç —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω –∫–æ–º–∞–Ω–¥–æ–π ICM\n–°–æ–∑–¥–∞—Ç–µ–ª–∏: –¢–∏–º–æ—à–µ–≤ –†–∏—Ñ–∞—Ç –∏ –°—Ç–æ–∫–æ–∑–æ–≤ –í–∞–ª–µ–Ω—Ç–∏–Ω\n–í–µ—Ä—Å–∏—è –±–æ—Ç–∞: {config.version_bot}""")

    if (message.text == "–†–∞—Å–ø. –Ω–µ–¥–µ–ª—è"):
        markup = buttons.makup_type_week()
        bot.send_message(message.chat.id, f"–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –Ω–µ–¥–µ–ª–∏", reply_markup=markup)

    if (message.text == "üóì–ó–∞–≤—Ç—Ä–∞"):
        try:
            msg = defs.rasp_tomorrow(db.get_group_for_tg_id(message.from_user.id))
            bot.send_message(message.chat.id, msg)
        except KeyError:
            bot.send_message(message.chat.id, '–ù–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å –ø–∞—Ä –Ω–µ—Ç, –º–æ–∂–Ω–æ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è')

    if (message.text == "üóì–°–µ–≥–æ–¥–Ω—è"):
        try:
            msg = defs.rasp_today(db.get_group_for_tg_id(message.from_user.id))
            bot.send_message(message.chat.id, msg)

        except KeyError:
            bot.send_message(message.chat.id, '–ù–∞ —ç—Ç–æ—Ç –¥–µ–Ω—å –ø–∞—Ä –Ω–µ—Ç, –º–æ–∂–Ω–æ —Ä–∞—Å—Å–ª–∞–±–∏—Ç—å—Å—è')

    if (message.text == "–ú–µ–Ω—é"):
        markup = buttons.markup_menu(message.from_user.id)
        bot.send_message(message.chat.id, '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é', reply_markup=markup)

    if (message.text == "üë§–ü—Ä–æ—Ñ–∏–ª—å"):
        group = db.get_group_for_tg_id(message.from_user.id)
        markup = buttons.marup_profil()
        bot.send_message(message.chat.id, f"–í–∞—à–∞ –≥—Ä—É–ø–ø–∞: {group}", reply_markup=markup)

    if (message.text == "–ò–∑–º–µ–Ω–∏—Ç—å –≥—Ä—É–ø–ø—É"):
        mesg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏ –≥—Ä—É–ø–ø—É\n(–ü—Ä–∏–º–µ—Ä : –ò–ë-321)')
        bot.register_next_step_handler(mesg, find_group)

    if (message.text == "‚öôÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏"):
        markup = buttons.markup_settings()
        bot.send_message(message.chat.id, f"–ù–∞—Å—Ç—Ä–æ–π–∫–∏", reply_markup=markup)

    if (message.text == "–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"):
        mesg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –í–∞—à–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ')
        bot.register_next_step_handler(mesg, new_offer)

    if (message.text == "–°–æ–æ–±—â–∏—Ç—å –æ–± –æ—à–∏–±–∫–µ"):
        mesg = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –æ—à–∏–±–∫—É')
        bot.register_next_step_handler(mesg, new_mistake)

    if (message.text == "‚õîÔ∏è–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å"):
        tg_id = message.from_user.id
        if tg_id in config.admins:
            msg = f'–í—Å–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {db.get_count_users()}'
            bot.send_message(message.chat.id, msg)
        if tg_id not in config.admins:
            msg = '–¢—ã –Ω–µ –æ–¥–º–µ–Ω ('
            bot.send_message(message.chat.id, msg)


if __name__ == '__main__':
    while True:
        try:
            print('bot rolling')
            bot.polling(none_stop=True)
        except Exception as e:
            time.sleep(2)
            print(e)
